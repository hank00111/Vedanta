//@version=5
strategy("MACD NN Weighted Strategy", overlay=true, initial_capital=100000, default_qty_type=strategy.percent_of_equity, default_qty_value=10)

// ====== MACD 計算 ======
fastLength  = input.int(12, "Fast EMA")
slowLength  = input.int(26, "Slow EMA")
signalLength = input.int(9, "Signal EMA")

fastEMA = ta.ema(close, fastLength)
slowEMA = ta.ema(close, slowLength)
macdLine = fastEMA - slowEMA
signalLine = ta.ema(macdLine, signalLength)
delta = macdLine - signalLine
deltaPrev = delta[1]

// ====== NN 權重 ======
// 預設 Python 權重
w1_0 = input.float(1, "W1[0,0]")   // delta_t > 0
w1_1 = input.float(0, "W1[0,1]")
w1_2 = input.float(-1, "W1[1,0]")  // delta_t < 0
w1_3 = input.float(0, "W1[1,1]")
w1_4 = input.float(0, "W1[2,0]")   // delta_t_prev > 0
w1_5 = input.float(1, "W1[2,1]")
w1_6 = input.float(0, "W1[3,0]")   // delta_t_prev < 0
w1_7 = input.float(-1, "W1[3,1]")

b1_0 = input.float(0, "b1[0]")
b1_1 = input.float(0, "b1[1]")
b1_2 = input.float(0, "b1[2]")
b1_3 = input.float(0, "b1[3]")

w2 = array.new_float(4, 0)
array.set(w2, 0, input.float(1, "W2[0]"))
array.set(w2, 1, input.float(-1, "W2[1]"))
array.set(w2, 2, input.float(-1, "W2[2]"))
array.set(w2, 3, input.float(1, "W2[3]"))

b2 = input.float(0.0, "b2")

threshold = input.float(0.0, "Threshold")

// ====== ReLU 函數 ======
relu(x) =>
    math.max(0, x)

// ====== NN Forward ======
h0 = relu(w1_0 * delta + w1_1 * deltaPrev + b1_0)
h1 = relu(w1_2 * delta + w1_3 * deltaPrev + b1_1)
h2 = relu(w1_4 * delta + w1_5 * deltaPrev + b1_2)
h3 = relu(w1_6 * delta + w1_7 * deltaPrev + b1_3)

// 2層線性組合
out = h0 * array.get(w2,0) + h1 * array.get(w2,1) + h2 * array.get(w2,2) + h3 * array.get(w2,3) + b2

// ====== NN 信號判斷 ======
nnSignal = out > threshold ? 1 : out < -threshold ? -1 : 0

// ====== 策略持倉邏輯 ======
var int position = 0
var int signal = 0

if position == 1 and nnSignal == -1
    strategy.close("Long")
    signal := -1
    position := 0
else if position == -1 and nnSignal == 1
    strategy.close("Short")
    signal := 1
    position := 0
else if position == 0
    if nnSignal == 1
        strategy.entry("Long", strategy.long)
        signal := 1
        position := 1
    else if nnSignal == -1
        strategy.entry("Short", strategy.short)
        signal := -1
        position := -1
    else
        signal := 0

// ====== 畫圖 ======
plot(macdLine, color=color.blue, title="MACD Line")
plot(signalLine, color=color.orange, title="Signal Line")
plotshape(signal == 1, title="Buy Signal", location=location.belowbar, color=color.green, style=shape.triangleup, size=size.small)
plotshape(signal == -1, title="Sell Signal", location=location.abovebar, color=color.red, style=shape.triangledown, size=size.small)
