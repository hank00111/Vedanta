//@version=5
strategy("ADA 4H  Long+Short MIX V1",
     overlay = true,
     initial_capital = 100,
     commission_type = strategy.commission.percent,
     commission_value = 0.2,
     pyramiding = 0,
     // 採用固定數量下單；qty 由 f_qty_by_pct 計算
     default_qty_type = strategy.fixed)

// ===============================
// 倉位 sizing（多空各自占權益的百分比 → 轉成數量）
// ===============================
longPosPct  = input.float(50,  title="【多】倉位％(占權益)",  minval=1, maxval=100, step=1)
shortPosPct = input.float(100, title="【空】倉位％(占權益)",  minval=1, maxval=100, step=1)

// 以當前權益*百分比/價格 → 下單數量（允許小數數量）
f_qty_by_pct(pct) =>
    (strategy.equity * pct / 100.0) / close

// ===============================
// 多單參數（唐奇安 + 長期SMA + RSI）
// ===============================
donchianLength   = input.int(12,  title="【多】唐奇安通道週期", minval=5)
longTermSmaLen   = input.int(150, title="【多】長期SMA濾網週期", minval=50)
rsiLenLong       = input.int(30,  title="【多】RSI 週期", minval=5, maxval=100)
rsiThLong        = input.float(60.0, title="【多】RSI 閾值", minval=0.0, maxval=100.0)

// 指標計算（多）
upperBand   = ta.highest(high, donchianLength)[1]
lowerBand   = ta.lowest(low,  donchianLength)[1]
longTermSma = ta.sma(close, longTermSmaLen)
rsiLong     = ta.rsi(close, rsiLenLong)

// 多單訊號
isMacroUptrend = close > longTermSma
isBreakout     = ta.crossover(close, upperBand)
isRsiOKLong    = rsiLong > rsiThLong
longSignal     = isMacroUptrend and isBreakout and isRsiOKLong and strategy.position_size == 0

// 多單進出場
if longSignal
    strategy.entry("Long", strategy.long, qty = f_qty_by_pct(longPosPct))

if strategy.position_size > 0
    strategy.exit("Long Exit", from_entry = "Long", stop = lowerBand)


// ===============================
// 空單參數（EMA/SMA + RSI + 風控 + 冷靜期）
// ===============================
emaFastLength   = input.int(6,  title="【空】EMA 敏感週期", minval=5, step=1)
smaSlowLength   = input.int(65, title="【空】SMA 穩定週期", minval=10, step=1)
rsiLenShort     = input.int(65, title="【空】RSI 週期", minval=5, step=1)
rsiShortThresh  = input.int(50, title="【空】RSI 進場門檻", minval=20, maxval=100, step=1)

shortTPPct      = input.float(10, title="【空】止盈 (%)",          minval=0.5, step=0.1)
shortSLPct      = input.float(5,  title="【空】止損 (%)",          minval=0.5, step=0.1)
trailTriggerPct = input.float(8,  title="【空】移動停損觸發 (%)",   minval=0.1, step=0.1)
trailOffsetPct  = input.float(4,  title="【空】移動停損距離 (%)",   minval=0.1, step=0.1)

// 冷靜期設定
maxConsecLosses = input.int(1,  title="【空】連續虧損次數上限", minval=1)
cooldownBars    = input.int(12, title="【空】冷靜期長度 (K棒)",  minval=1)

// 指標計算（空）
emaFast  = ta.ema(close, emaFastLength)
smaSlow  = ta.sma(close, smaSlowLength)
rsiShort = ta.rsi(close, rsiLenShort)

// ====== 冷靜期只追蹤「空單」的連虧 ======
var int  shortLossCount     = 0
var int  shortCooldownUntil = na
var int  lastClosedCount    = 0

if strategy.closedtrades > lastClosedCount
    // 處理新關閉的所有交易，僅統計空單
    for i = lastClosedCount to strategy.closedtrades - 1
        eid = strategy.closedtrades.entry_id(i)
        prf = strategy.closedtrades.profit(i)
        if eid == "Short"
            if prf < 0
                shortLossCount += 1
                if shortLossCount >= maxConsecLosses
                    shortCooldownUntil := bar_index + cooldownBars
            else
                shortLossCount := 0
    lastClosedCount := strategy.closedtrades

inShortCooldown = not na(shortCooldownUntil) and bar_index < shortCooldownUntil

// 空單進場條件與限制（冷靜期只作用在空單）
shortSignal   = ta.crossunder(emaFast, smaSlow) and (rsiShort < rsiShortThresh) and strategy.position_size == 0
canEnterShort = (strategy.position_size == 0) and not inShortCooldown

if shortSignal and canEnterShort
    strategy.entry("Short", strategy.short, qty = f_qty_by_pct(shortPosPct))

// 空單止盈 / 止損 / 移動停損
var float trailStopPriceShort = na
if strategy.position_size < 0
    shortTP      = strategy.position_avg_price * (1 - shortTPPct / 100.0)
    shortSL      = strategy.position_avg_price * (1 + shortSLPct / 100.0)
    triggerPrice = strategy.position_avg_price * (1 - trailTriggerPct / 100.0)

    if low <= triggerPrice
        trailStopPriceShort := close * (1 + trailOffsetPct / 100.0)
    else
        trailStopPriceShort := shortSL

    strategy.exit("Short Exit", from_entry = "Short", stop = trailStopPriceShort, limit = shortTP)
else
    trailStopPriceShort := na

// 反向平倉：EMA 上穿 SMA 時平掉空單
if strategy.position_size < 0 and ta.crossover(emaFast, smaSlow)
    strategy.close("Short", comment = "反向平倉")

// ===============================
// 視覺輔助
// ===============================
plot(upperBand,     color=color.new(color.aqua,   50), title="Donchian Upper")
plot(lowerBand,     color=color.new(color.red,    50), title="Donchian Lower")
plot(longTermSma,   color=color.new(color.orange,  0), title="Long Term SMA Filter", linewidth=2)

plot(emaFast,       color=color.white,  title="EMA Fast", linewidth=2)
plot(smaSlow,       color=color.yellow, title="SMA Slow", linewidth=2)
plotshape(inShortCooldown, title="空單冷靜期中", location=location.top, color=color.red, style=shape.xcross, size=size.small)